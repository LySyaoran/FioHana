@model Do_An.Models.user
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/_shared/_LayoutPage1.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        table {
            border: 1px solid white;
            border-collapse: collapse;
            color: white;
            background-color: #59ab6e;
            border-radius: 50px;
        }

        .lable_item {
            padding: 2vw;
        }

        .input_item {
            margin-right: 2vw;
        }

        input:focus {
            outline: none;
        }

        p {
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("Login", "Login", FormMethod.Post, new { onsubmit = "return handleRememberMe();" }))
    {
        Html.AntiForgeryToken();
        <table style="margin: 5vw auto; width: 40vw">
            <tr>
                <th style="padding: 1vw 0; font-size: 2vw; text-align: center; font-size: 50px">Log In</th>
            </tr>
            <tr>
                <td class="lable_item">
                    <p style="text-align: center">Email:</p>
                    @Html.TextBoxFor(m => m.email, new { id = "email", style = "width: 100%", placeholder = "Hãy nhập Email", @class = "input-field" })
                    <p style="color: white; text-align: center" class="validation-message">@Html.ValidationMessageFor(m => m.email)</p>
                </td>
            </tr>
            <tr>
                <td class="lable_item">
                    <p style="text-align: center">PassWord:</p>
                    @Html.PasswordFor(m => m.password, new { id = "password", style = "width: 100%", placeholder = "Hãy nhập Pass Word", @class = "input-field" })
                    <p style="color: white; text-align: center" class="validation-message">@Html.ValidationMessageFor(m => m.password)</p>
                </td>
            </tr>
            <tr>
                <td class="lable_item" style="text-align: center;">
                    <input type="checkbox" id="showPassword" onclick="togglePasswordVisibility()"> Hiện mật khẩu
                </td>
            </tr>
            <tr>
                <td align="center">
                    <input type="checkbox" id="rememberMe" name="remember" />
                    <label style="margin-left: 3px">Lưu đăng nhập?</label>
                </td>
            </tr>
            <tr>
                <td align="center">
                    <label style="margin: 2vw 2vw 1vw 2vw; display: block">Nếu bạn chưa có tài khoản? Hãy nhấn vào <a href="~/Login/Signup" style="color: black">Sign Up</a></label>
                </td>
            </tr>
            <tr>
                <td align="center" style="padding: 1vw 0; font-size: 2vw">
                    <button type="submit" class="btn_buy" style="float: none; background-color: white; color: #59ab6e">Submit</button>
                </td>
            </tr>
        </table>
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var inputFields = document.querySelectorAll('.input-field');
            inputFields.forEach(function (input) {
                input.addEventListener('input', function () {
                    var validationMessage = input.parentElement.querySelector('.validation-message');
                    if (validationMessage) {
                        validationMessage.textContent = '';
                    }
                });
            });

            // Tự động điền thông tin đăng nhập từ cookie nếu có
            var email = getCookie('email');
            var password = getCookie('password');
            if (email && password) {
                document.getElementById('email').value = email;
                document.getElementById('password').value = password;
                document.getElementById('rememberMe').checked = true;
            }
        });

        function togglePasswordVisibility() {
            var passwordField = document.getElementById('password');
            var showPasswordCheckbox = document.getElementById('showPassword');

            if (showPasswordCheckbox.checked) {
                passwordField.type = 'text';
            } else {
                passwordField.type = 'password';
            }
        }

        function handleRememberMe() {
            var rememberMe = document.getElementById('rememberMe').checked;
            var email = document.getElementById('email').value;
            var password = document.getElementById('password').value;

            if (rememberMe) {
                setCookie('email', email, 7); // Lưu email trong 7 ngày
                setCookie('password', password, 7); // Lưu password trong 7 ngày
            } else {
                deleteCookie('email');
                deleteCookie('password');
            }

            return true; // Cho phép gửi form
        }

        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }

        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

        function deleteCookie(name) {
            document.cookie = name + '=; Max-Age=-99999999;';
        }
    </script>
</body>
</html>